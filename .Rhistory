theme(axis.text.x = element_text(angle=90, hjust=1))
i$sequence
ddfF[[1]]$se
ddF[[1]]$denoised
ddF[[1]]$sequence
makeSequenceTable(ddF)
makeSequenceTable(ddF)[,1:3]
ddF[[1]]$sequence
for (i in ddF){
i$sequence <- gsub("AAAAAA*","AAAAAA",i$sequence)
i$sequence <- gsub("TTTTTT*","TTTTTT",i$sequence)
i$sequence <- gsub("CCCCCC*","CCCCCC",i$sequence)
i$sequence <- gsub("GGGGGG*","GGGGGG",i$sequence)
}
ddF[[1]]$sequence
gsub("TTTTTT*","TTTTTT",i$sequence)
gsub("TTTTTT*","XXXXX",i$sequence)
i$sequence <- gsub("TTTTTT*","XXXXX",i$sequence)
i$sequence
ddF <- list()
for (i in names(dereps)){
if (substr(i,2,2)==8){
ddF[[i]] <- dada(derep = dereps[[i]], err = err8)
}else{
ddF[[i]] <- dada(derep = dereps[[i]], err = err9)
}
}
for (i in names(ddF)){
ddF[[i]]$sequence <- gsub("AAAAAA*","AAAAAA",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("TTTTTT*","TTTTTT",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("CCCCCC*","CCCCCC",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("GGGGGG*","GGGGGG",ddF[[i]]$sequence)
}
topx=10
topxseqs <- c()
for (i in dereps){
topxseqs <- c(topxseqs,names(i$uniques[1:topx]))
}
table(table(topxseqs)) #6 sequences are in the top10 in all samples
df <- data.frame()
for(i in names(dereps)){
df <- rbind(df, data.frame(sequence=names(dereps[[i]]$uniques[1:topx]),
Abundance=unname(dereps[[i]]$uniques[1:topx]),
ASV=ddF[[i]]$sequence[ddF[[i]]$map[1:topx]],
SampleID=i))
}
levels(df$ASV2) <- paste0("ASV-",1:length(levels(df$ASV2)))
df$sequence2 <- df$sequence
df$ASV2 <- df$ASV
levels(df$sequence2) <- paste0("sequence-",1:length(levels(df$sequence2)))
df$ASVrep <- as.character(df$sequence)==as.character(df$ASV)
df$ASVrep2[df$ASVrep] <- as.character(df$ASV2[df$ASVrep])
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASV2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
df$ASV2 <- df$ASV
levels(df$ASV2) <- paste0("ASV-",1:length(levels(df$ASV2)))
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASV2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
df$ASV2
df$ASV
st <- makeSequenceTable(ddF)
st2 <- collapseNoMismatch(st)
dim(st2)
dim(st)
st[,1]
st[,1:10]
source('C:/Users/mdavi/Documents/AMC/Projects/ITS_seq_ASVmapping/follow_seq2ASV.R')
fqs <- list.files("./", pattern = "I.*fastq.gz")
dereps <- list()
for (file in fqs){
dereps[[file]] <- derepFastq(file)
}
names(dereps) <- gsub("_.*","",names(dereps))
err8 <- readRDS("ITS_0008.R1.RDS")
err9 <- readRDS("ITS_0009.R1.RDS")
ddF <- list()
for (i in names(dereps)){
if (substr(i,2,2)==8){
ddF[[i]] <- dada(derep = dereps[[i]], err = err8)
}else{
ddF[[i]] <- dada(derep = dereps[[i]], err = err9)
}
}
st <- makeSequenceTable(ddF)
colnames(st) <- gsub("AAAAAA*","AAAAAA",colnames(st))
colnames(st) <- gsub("TTTTTT*","TTTTTT",colnames(st))
colnames(st) <- gsub("CCCCCC*","CCCCCC",colnames(st))
colnames(st) <- gsub("GGGGGG*","GGGGGG",colnames(st))
st2 <- collapseNoMismatch(st)
dim(st)
dim(st2)
st[,1:10]
st[1:2,1:10]
colnames(st) <- gsub("AAAAA*","AAAAA",colnames(st))
colnames(st) <- gsub("TTTTT*","TTTTT",colnames(st))
colnames(st) <- gsub("CCCCC*","CCCCC",colnames(st))
colnames(st) <- gsub("GGGGG*","GGGGG",colnames(st))
st2 <- collapseNoMismatch(st)
dim(st2)
dim(st1)
dim(st)
st <- makeSequenceTable(ddF)
st <- makeSequenceTable(ddF)
st2 <- st
colnames(st2) <- gsub("AAAAA*","AAAAA",colnames(st2))
colnames(st2) <- gsub("TTTTT*","TTTTT",colnames(st2))
colnames(st2) <- gsub("CCCCC*","CCCCC",colnames(st2))
colnames(st2) <- gsub("GGGGG*","GGGGG",colnames(st2))
st2 <- collapseNoMismatch(st)
colnames(st) %in% colnames(st2)
!colnames(st) %in% colnames(st2)
st <- makeSequenceTable(ddF)
st2 <- st
colnames(st2) <- gsub("AAAAA*","AAAAA",colnames(st2))
colnames(st2) <- gsub("TTTTT*","TTTTT",colnames(st2))
colnames(st2) <- gsub("CCCCC*","CCCCC",colnames(st2))
colnames(st2) <- gsub("GGGGG*","GGGGG",colnames(st2))
st2 <- collapseNoMismatch(st)
colnames(st) %in% colnames(st2)
colnames(st2) %in% colnames(st)
dim(st)
dim(st2)
st2 <- collapseNoMismatch(st2)
colnames(st2) %in% colnames(st)
colnames(st) %in% colnames(st2)
st <- makeSequenceTable(ddF)
st2 <- st
colnames(st2) <- gsub("AAAAA*","AAAAA",colnames(st2))
colnames(st2) <- gsub("TTTTT*","TTTTT",colnames(st2))
colnames(st2) <- gsub("CCCCC*","CCCCC",colnames(st2))
st2 <- collapseNoMismatch(st2)
colnames(st2) <- gsub("GGGGG*","GGGGG",colnames(st2))
colnames(st) %in% colnames(st2)
st <- makeSequenceTable(ddF)
st2 <- st
colnames(st2) <- gsub("AAAAAA*","AAAAAA",colnames(st2))
colnames(st2) <- gsub("TTTTTT*","TTTTTT",colnames(st2))
colnames(st2) <- gsub("CCCCCC*","CCCCCC",colnames(st2))
colnames(st2) <- gsub("GGGGGG*","GGGGGG",colnames(st2))
st2 <- collapseNoMismatch(st2)
dim(st)
dim(st2)
names(ddF)
phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF))))
phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF), Sample_Name=names(ddF))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF), Sample_Name=names(ddF))))
ps.rare <- rarefy_even_depth(ps)
ps <- phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF), Sample_Name=names(ddF))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Name")
plot_ordination(ps, ord, label = "Sample_Name")
ps@sam_data
plot_ordination(ps, ord, label = "Sample_Name")
ps.rare@sam_data
plot_ordination(ps, ord, label = "Sample_Name")
ps <- phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF), Sample_Namex=names(ddF))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex")
ps@sam_data
ps <- phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex")
ps <- phyloseq(otu_table(st2, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex")
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASVrep2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASV2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ps <- phyloseq(otu_table(st2, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))))
plot_ordination(ps, ord, label = "Polymerase")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
ps <- phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P"))))
ps.rare <- rarefy_even_depth(ps)
ps <- phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P"))))
st
ps <- phyloseq(otu_table(st, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
ps <- phyloseq(otu_table(st2, taxa_are_rows = F), sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))))
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
plot_bar(ps)
plot_bar(ps.rare)
make.unique(colnames(st2))
make.unique(substr(colnames(st2),1:10))
make.unique(substr(colnames(st2),1,10))
ps <- phyloseq(otu_table(st2, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(make.unique(substr(colnames(st2),1,10)))
)
tt <- cbind(make.unique(substr(colnames(st2),1,10)),colnames(st2))
ps <- phyloseq(otu_table(st2, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
ps <- phyloseq(otu_table(st2, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
rownames(tt) <- tt[,2]
ps <- phyloseq(otu_table(st2, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
colnames(ps@tax_table)
plot_bar(ps, ta1)
plot_bar(ps, fill = ta1)
ps.temp <- prune_taxa(colnames(ps@otu_table) %in% colnames(ps@otu_table)[1:10], ps.rare)
ps.temp <- prune_taxa(colnames(ps.rare@otu_table) %in% colnames(ps.rare@otu_table)[1:10], ps.rare)
plot_bar(ps.temp, fill = ta1)
plot_bar(ps.temp, fill = "ta1")
ps.rare
ps.rare <- rarefy_even_depth(ps)
ps.temp <- prune_taxa(colnames(ps.rare@otu_table) %in% colnames(ps.rare@otu_table)[1:10], ps.rare)
plot_bar(ps.temp, fill = "ta1")
tt <- cbind(make.unique(substr(colnames(st),1,10)),colnames(st))
rownames(tt) <- tt[,2]
ps <- phyloseq(otu_table(st, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
ps.temp <- prune_taxa(colnames(ps.rare@otu_table) %in% colnames(ps.rare@otu_table)[1:10], ps.rare)
plot_bar(ps.temp, fill = "ta1")
tt <- cbind(make.unique(substr(colnames(st2),1,10)),colnames(st2))
rownames(tt) <- tt[,2]
ps <- phyloseq(otu_table(st2, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
ps.rare <- rarefy_even_depth(ps)
ps.temp <- prune_taxa(colnames(ps.rare@otu_table) %in% colnames(ps.rare@otu_table)[1:10], ps.rare)
plot_bar(ps.temp, fill = "ta1")
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
ps.temp <- prune_taxa(colnames(ps.rare@otu_table) %in% colnames(ps.rare@otu_table)[1:10], ps.rare)
plot_bar(ps.temp, fill = "ta1")
library(dada2);packageVersion("dada2")
library(phyloseq);packageVersion("phyloseq")
library(ggplot2);packageVersion("ggplot2")
fqs <- list.files("./", pattern = "I.*fastq.gz")
dereps <- list()
for (file in fqs){
dereps[[file]] <- derepFastq(file)
}
names(dereps) <- gsub("_.*","",names(dereps))
err8 <- readRDS("ITS_0008.R1.RDS")
err9 <- readRDS("ITS_0009.R1.RDS")
ddF <- list()
for (i in names(dereps)){
if (substr(i,2,2)==8){
ddF[[i]] <- dada(derep = dereps[[i]], err = err8)
}else{
ddF[[i]] <- dada(derep = dereps[[i]], err = err9)
}
}
fqs <- list.files("./", pattern = "I.*fastq.gz")
dereps <- list()
for (file in fqs){
dereps[[file]] <- derepFastq(file)
}
names(dereps) <- gsub("_.*","",names(dereps))
err8 <- readRDS("ITS_0008.R1.RDS")
err9 <- readRDS("ITS_0009.R1.RDS")
ddF <- list()
for (i in names(dereps)){
if (substr(i,2,2)==8){
ddF[[i]] <- dada(derep = dereps[[i]], err = err8)
}else{
ddF[[i]] <- dada(derep = dereps[[i]], err = err9)
}
}
for (i in names(ddF)){
ddF[[i]]$sequence <- gsub("AAAAAA*","AAAAAA",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("TTTTTT*","TTTTTT",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("CCCCCC*","CCCCCC",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("GGGGGG*","GGGGGG",ddF[[i]]$sequence)
}
topx=10
topxseqs <- c()
for (i in dereps){
topxseqs <- c(topxseqs,names(i$uniques[1:topx]))
}
table(table(topxseqs)) #6 sequences are in the top10 in all samples
df <- data.frame()
for(i in names(dereps)){
df <- rbind(df, data.frame(sequence=names(dereps[[i]]$uniques[1:topx]),
Abundance=unname(dereps[[i]]$uniques[1:topx]),
ASV=ddF[[i]]$sequence[ddF[[i]]$map[1:topx]],
SampleID=i))
}
df$ASV2 <- df$ASV
levels(df$ASV2) <- paste0("ASV-",1:length(levels(df$ASV2)))
df$sequence2 <- df$sequence
levels(df$sequence2) <- paste0("sequence-",1:length(levels(df$sequence2)))
df$ASVrep <- as.character(df$sequence)==as.character(df$ASV)
df$ASVrep2[df$ASVrep] <- as.character(df$ASV2[df$ASVrep])
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASV2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASVrep2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
st <- makeSequenceTable(ddF)
st2 <- st
colnames(st2) <- gsub("AAAAAA*","AAAAAA",colnames(st2))
colnames(st2) <- gsub("TTTTTT*","TTTTTT",colnames(st2))
colnames(st2) <- gsub("CCCCCC*","CCCCCC",colnames(st2))
colnames(st2) <- gsub("GGGGGG*","GGGGGG",colnames(st2))
st2 <- collapseNoMismatch(st2)
tt <- cbind(make.unique(substr(colnames(st),1,10)),colnames(st))
rownames(tt) <- tt[,2]
ps <- phyloseq(otu_table(st, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
ps.temp <- prune_taxa(colnames(ps.rare@otu_table) %in% colnames(ps.rare@otu_table)[1:10], ps.rare)
plot_bar(ps.temp, fill = "ta1")
ps.rare <- rarefy_even_depth(ps)
ord <- ordinate(ps.rare, method = "PCoA", distance = "bray")
plot_ordination(ps, ord, label = "Sample_Namex", color="Polymerase")
tt <- cbind(make.unique(substr(colnames(st2),1,10)),colnames(st2))
rownames(tt) <- tt[,2]
ps <- phyloseq(otu_table(st2, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
source("../../MicrobiotaCentre/MiCA_ITS/Scripts/taxa_facet_barplot_asv.R")
taxa_facet_barplot_asv(ps.temp, Group = "Sample_Namex", facet1 = "Polymerase", facet2 = "Lib", rank = "ASV", lumpNA = T)
colnames(ps@tax_table)
taxa_facet_barplot_asv(ps.temp, Group = "Sample_Namex", facet1 = "Polymerase", facet2 = "Lib", rank = "ta2", lumpNA = T)
library(dada2);packageVersion("dada2")
library(dada2);packageVersion("dada2")
library(phyloseq);packageVersion("phyloseq")
library(ggplot2);packageVersion("ggplot2")
source("../../MicrobiotaCentre/MiCA_ITS/Scripts/taxa_facet_barplot_asv.R")
fqs <- list.files("./", pattern = "I.*fastq.gz")
dereps <- list()
for (file in fqs){
dereps[[file]] <- derepFastq(file)
}
names(dereps) <- gsub("_.*","",names(dereps))
err8 <- readRDS("ITS_0008.R1.RDS")
err9 <- readRDS("ITS_0009.R1.RDS")
ddF <- list()
for (i in names(dereps)){
if (substr(i,2,2)==8){
ddF[[i]] <- dada(derep = dereps[[i]], err = err8)
}else{
ddF[[i]] <- dada(derep = dereps[[i]], err = err9)
}
}
for (i in names(ddF)){
ddF[[i]]$sequence <- gsub("AAAAAA*","AAAAAA",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("TTTTTT*","TTTTTT",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("CCCCCC*","CCCCCC",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("GGGGGG*","GGGGGG",ddF[[i]]$sequence)
}
ddF[[1]]$map
table(ddF[[1]]$map)
table(ddF[[2]]$map)
table(ddF[[3]]$map)
table(ddF[[4]]$map)
table(ddF[[5]]$map)
table(ddF[[6]]$map)
ddF[[i]]$sequence
ddF[[i]]$denoised
aggregate(ddF[[i]]$denoised, by=list(ddF[[i]]$sequence))
aggregate(ddF[[i]]$denoised, by=list(ddF[[i]]$sequence), FUN=sum)
table(ddF[[i]]$sequence)
sum(table(ddF[[i]]$sequence)!=1)
sum(table(ddF[[1]]$sequence)!=1)
sum(table(ddF[[2]]$sequence)!=1)
sum(table(ddF[[3]]$sequence)!=1)
sum(table(ddF[[4]]$sequence)!=1)
sum(table(ddF[[5]]$sequence)!=1)
sum(table(ddF[[6]]$sequence)!=1)
dereps[[1]]
dereps[[1]]$uniques
dereps[[1]]$uniques
length(dereps[[1]]$uniques)/sum(dereps[[1]]$uniques)
for (i in names(ddF)){
ddF[[i]]$sequence <- gsub("AAAAAA*","AAAAAA",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("TTTTTT*","TTTTTT",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("CCCCCC*","CCCCCC",ddF[[i]]$sequence)
ddF[[i]]$sequence <- gsub("GGGGGG*","GGGGGG",ddF[[i]]$sequence)
}
topx=10
topxseqs <- c()
for (i in dereps){
topxseqs <- c(topxseqs,names(i$uniques[1:topx]))
}
table(table(topxseqs)) #6 sequences are in the top10 in all samples
df <- data.frame()
for(i in names(dereps)){
df <- rbind(df, data.frame(sequence=names(dereps[[i]]$uniques[1:topx]),
Abundance=unname(dereps[[i]]$uniques[1:topx]),
ASV=ddF[[i]]$sequence[ddF[[i]]$map[1:topx]],
SampleID=i))
}
df$ASV2 <- df$ASV
levels(df$ASV2) <- paste0("ASV-",1:length(levels(df$ASV2)))
df$sequence2 <- df$sequence
levels(df$sequence2) <- paste0("sequence-",1:length(levels(df$sequence2)))
df$ASVrep <- as.character(df$sequence)==as.character(df$ASV)
df$ASVrep2[df$ASVrep] <- as.character(df$ASV2[df$ASVrep])
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASV2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(df, aes(x = sequence2, y = Abundance, fill=ASVrep2)) +
geom_bar(stat="identity") +
facet_grid(SampleID ~ ., scale="free_y") +
theme(axis.text.x = element_text(angle=90, hjust=1))
ps
st2 <- collapseNoMismatch(st2)
tt <- cbind(make.unique(substr(colnames(st),1,10)),colnames(st))
st <- makeSequenceTable(ddF)
st2 <- st
colnames(st2) <- gsub("AAAAAA*","AAAAAA",colnames(st2))
colnames(st2) <- gsub("TTTTTT*","TTTTTT",colnames(st2))
colnames(st2) <- gsub("CCCCCC*","CCCCCC",colnames(st2))
colnames(st2) <- gsub("GGGGGG*","GGGGGG",colnames(st2))
st2 <- collapseNoMismatch(st2)
tt <- cbind(make.unique(substr(colnames(st),1,10)),colnames(st))
rownames(tt) <- tt[,2]
ps <- phyloseq(otu_table(st, taxa_are_rows = F),
sample_data(data.frame(row.names=names(ddF),
Sample_Namex=names(ddF),
Lib=substr(names(ddF),1,2),
Polymerase=c("T","P","T","P","T","P"))),
tax_table(tt)
)
ps@sam_data
x <- c()
for (i in names(dereps)){
x[i] <- length(dereps[[i]]$uniques)/sum(dereps[[i]]$uniques)
}
x
ps@sam_data$seqcom <- 1-x
ps@sam_data
ddF
ddF[[1]]
ddF[[1]]$sequence
